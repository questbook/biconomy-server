/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/check": {
    post: operations["check"];
  };
  "/charge_gas": {
    post: operations["charge_gas"];
  };
  "/authorize_owner": {
    post: operations["authorize_owner"];
  };
  "/add_workspace_owner": {
    post: operations["add_workspace_owner"];
  };
  "/add_user": {
    post: operations["add_user"];
  };
  "/refresh_nonce": {
    post: operations["refresh_nonce"];
  };
}

export interface components {
  schemas: {
    Error: {
      statusCode: number;
      /** @description Specific description of the error */
      error: string;
      /** @description What the error was */
      message: string;
      /** @description Some extra information about the error */
      data?: { [key: string]: unknown };
    };
    Transaction: {
      v: number;
      r: string;
      s: string;
      transactionHash: string;
    };
    TransactionRequest: {
      data: {
        signedNonce: components["schemas"]["Transaction"];
        nonce: string;
        webwallet_address: string;
      };
      webwallet_address?: string;
    };
    AddUserRequest: {
      webwallet_address: string;
    };
    ChargeGasRequest: {
      workspace_id: number;
      amount: number;
    };
    RefreshNonceRequest: {
      webwallet_address: string;
    };
    AddWorkspaceOwnerRequest: {
      scw_address: string;
      webwallet_address: string;
      workspace_id: number;
      workspace_name: string;
      chain_id: string;
      safe_address: string;
      safe_name: string;
    };
    AuthorizeOwnerRequest: {
      webwallet_address: string;
    };
  };
  responses: {
    /** Add workspace owner to the database */
    AddWorkspaceOwnerRespone: {
      content: {
        "application/json": {
          status: boolean;
          webhook_id?: string;
          funding_key?: string;
        };
      };
    };
    /** Add user to database */
    AddUserResponse: {
      content: {
        "application/json": {
          authorize: boolean;
        };
      };
    };
    /** Charge gas for domain owners */
    ChargeGasResponse: {
      content: {
        "application/json": {
          authorize?: boolean;
        } & {
          status: unknown;
        };
      };
    };
    /** Refresh the nonce of the user */
    RefreshNonceResponse: {
      content: {
        "application/json": {
          updated: boolean;
          nonce: string;
        };
      };
    };
    /** Get nonce for the user to sign */
    AuthorizeOwnerResponse: {
      content: {
        "application/json": {
          nonce?: boolean;
        } & {
          status: unknown;
        };
      };
    };
    /** Subsidize gas for user */
    TransactionResponse: {
      content: {
        "application/json": {
          /**
           * @description Whether to subsidize the gas for the user or not (true, false)
           * @example true
           */
          isConditionPassed: boolean;
        };
      };
    };
    /** Generic error response */
    ErrorResponse: {
      content: {
        "application/json": components["schemas"]["Error"];
      };
    };
  };
}

export interface operations {
  check: {
    responses: {
      200: components["responses"]["TransactionResponse"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TransactionRequest"];
      };
    };
  };
  charge_gas: {
    responses: {
      200: components["responses"]["ChargeGasResponse"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChargeGasRequest"];
      };
    };
  };
  authorize_owner: {
    responses: {
      200: components["responses"]["AuthorizeOwnerResponse"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AuthorizeOwnerRequest"];
      };
    };
  };
  add_workspace_owner: {
    responses: {
      200: components["responses"]["AddWorkspaceOwnerRespone"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddWorkspaceOwnerRequest"];
      };
    };
  };
  add_user: {
    responses: {
      200: components["responses"]["AddUserResponse"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AddUserRequest"];
      };
    };
  };
  refresh_nonce: {
    responses: {
      200: components["responses"]["RefreshNonceResponse"];
      400: components["responses"]["ErrorResponse"];
      500: components["responses"]["ErrorResponse"];
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RefreshNonceRequest"];
      };
    };
  };
}

export interface external {}
