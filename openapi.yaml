openapi: 3.0.1
info:
  title: QuestBook Biconomy server
  version: 0.1.0
  description: Checks if we should subsidize gas for users
servers:
  - url: https://api-biconomy.questbook.app
    description: Production server
  - url: http://localhost:3001
    description: Local server
paths:
  /check:
    post:
      operationId: check
      summary: check if to subsidize gas or not
      tags:
        - Subsidize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          $ref: '#/components/responses/TransactionResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /charge_gas:
    post:
      operationId: charge_gas
      summary: charge domain owners with gas used from gastank
      tags:
        - charge_gas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeGasRequest'
      responses:
        '200':
          $ref: '#/components/responses/ChargeGasResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'

  /authorize_owner:
    post:
      operationId: authorize_owner
      summary: get nonce of the user to sign
      tags:
        - authorize_owner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeOwnerRequest'
      responses:
        '200':
          $ref: '#/components/responses/AuthorizeOwnerResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  
  /add_workspace_owner:
    post:
      operationId: add_workspace_owner
      summary: Add the workspace/DAO owner to the database and retrieve the apiKey and webhookId
      tags:
        - addWorkspaceOwner
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWorkspaceOwnerRequest'
      responses:
        '200':
          $ref: '#/components/responses/AddWorkspaceOwnerRespone'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'


  /add_user:
    post:
      operationId: add_user
      summary: Retrieve the oauth token and add the user to the database
      tags:
        - addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserRequest'
      responses:
        '200':
          $ref: '#/components/responses/AddUserResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
  
  /refresh_nonce:
    post:
      operationId: refresh_nonce
      summary: refresh the user's nonce if expired
      tags:
        - refresh_nonce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshNonceRequest'
      responses:
        '200':
          $ref: '#/components/responses/RefreshNonceResponse'
        '400':
          $ref: '#/components/responses/ErrorResponse'
        '500':
          $ref: '#/components/responses/ErrorResponse'
components:
  schemas:
    Error:
      type: object
      required:
        - statusCode
        - error
        - message
      properties:
        statusCode:
          type: integer
          minLength: 200
          maximum: 505
        error:
          type: string
          description: Specific description of the error
        message:
          type: string
          description: What the error was
        data:
          type: object
          description: Some extra information about the error

    Transaction:
      type: object
      additionalProperties: false
      required:
        - v
        - r
        - s
        - transactionHash
      properties:
        v:
          type: number
        r:
          type: string
          minLength: 1
          maxLength: 70
        s:
          type: string
          minLength: 1
          maxLength: 70
        transactionHash:
          type: string
          minLength: 1
          maxLength: 256

    TransactionRequest:
      type: object
      additionalProperties: false
      required:
        - data
      properties:
        data:
          type: object
          additionalProperties: false
          required:
            - signedNonce
            - nonce
            - webwallet_address
            - to
            - chain_id
          properties:
            signedNonce:
              $ref: '#/components/schemas/Transaction'
            nonce:
              type: string
              minLength: 1
              maxLength: 256
            webwallet_address: 
              type: string
              minLength: 1
              maxLength: 256
            to:
              type: string
              minLength: 1
              maxLength: 256
            chain_id: 
              type: string
              minLength: 1
              maxLength: 20
        webwallet_address:
          type: string
          minLength: 1
          maxLength: 60

    AddUserRequest:
      type: object
      additionalProperties: false
      required:
        # - code
        - webwallet_address
      properties: 
        # code:
        #   type: string
        #   minLength: 1
        #   maxLength: 100
        webwallet_address:
          type: string
          minLength: 1
          maxLength: 50

    ChargeGasRequest:
      type: object
      additionalProperties: false
      required:
        - workspace_id
        # - chain_id
        - amount
      properties: 
        workspace_id:
          type: number
        # chain_id:
        #   type: number
        amount:
          type: number
          format: float

    RefreshNonceRequest:
      type: object
      additionalProperties: false
      required:
        - webwallet_address
      properties: 
        webwallet_address:
          type: string
          minLength: 1
          maxLength: 50

    AddWorkspaceOwnerRequest:
      type: object
      additionalProperties: false
      required:
        - webwallet_address
        - scw_address
        - workspace_id
        - chain_id
        - safe_address
      properties: 
        scw_address:
          type: string
          minLength: 1
          maxLength: 50
        webwallet_address:
          type: string
          minLength: 1
          maxLength: 50
        workspace_id:
          type: number
        chain_id:
          type: string
          minLength: 1
          maxLength: 100
        safe_address:
          type: string
          minLength: 40
          maxLength: 100


    AuthorizeOwnerRequest:
      type: object
      additionalProperties: false
      required:
        - webwallet_address
      properties: 
        webwallet_address:
          type: string
          minLength: 1
          maxLength: 50
        
  responses:
    AddWorkspaceOwnerRespone:
      description: Add workspace owner to the database
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - status
            properties: 
              status:
                type: boolean
              webhook_id:
                type: string
                minLength: 1
                maxLength: 100
              funding_key:
                type: string
                minLength: 1
                maxLength: 100
                
    AddUserResponse:
      description: Add user to database
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - authorize
            properties: 
              authorize:
                type: boolean
    
    ChargeGasResponse:
      description: Charge gas for domain owners
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - status
            properties: 
              authorize:
                type: boolean
    
    RefreshNonceResponse:
      description: Refresh the nonce of the user
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - nonce
              - updated
            properties: 
              updated:
                type: boolean
              nonce:
                type: string
                minLength: 50
                maxLength: 150
    
    AuthorizeOwnerResponse:
      description: Get nonce for the user to sign
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - status
            properties: 
              nonce:
                type: boolean

    TransactionResponse:
      description: Subsidize gas for user
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - isConditionPassed
            properties:
              isConditionPassed:
                type: boolean
                description: Whether to subsidize the gas for the user or not (true, false)
                example: true
    ErrorResponse:
      description: Generic error response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
